{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\backend\\\\file_upload_multer\\\\file_upload\\\\src\\\\file.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  function uploadFile() {\n    const fileInput = document.getElementById('fileInput');\n    const file = fileInput.files[0];\n    const formData = new FormData();\n    formData.append('file', file);\n    fetch('http://localhost:3000/upload', {\n      method: 'POST',\n      body: formData\n    }).then(response => response.text()).then(data => {\n      console.log(data);\n      alert(data);\n    }).catch(error => {\n      console.error('Error:', error);\n      alert('Error uploading file.');\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"fileInput\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onclick: uploadFile(),\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["FileUpload","uploadFile","fileInput","document","getElementById","file","files","formData","FormData","append","fetch","method","body","then","response","text","data","console","log","alert","catch","error","_jsxDEV","_Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onclick","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/backend/file_upload_multer/file_upload/src/file.js"],"sourcesContent":["const FileUpload = () => {\r\n    function uploadFile() {\r\n        const fileInput = document.getElementById('fileInput');\r\n        const file = fileInput.files[0];\r\n        \r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n  \r\n        fetch('http://localhost:3000/upload', {\r\n          method: 'POST',\r\n          body: formData\r\n        })\r\n        .then(response => response.text())\r\n        .then(data => {\r\n          console.log(data);\r\n          alert(data);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error:', error);\r\n          alert('Error uploading file.');\r\n        });\r\n      }\r\n    return ( \r\n        <>\r\n        <h1>Upload File</h1>\r\n  <input type=\"file\" id=\"fileInput\"/>\r\n  <button onclick={uploadFile()}>Upload</button>\r\n  </>\r\n\r\n     );\r\n}\r\n \r\nexport default FileUpload;"],"mappings":";;AAAA,MAAMA,UAAU,GAAGA,CAAA,KAAM;EACrB,SAASC,UAAUA,CAAA,EAAG;IAClB,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;IACtD,MAAMC,IAAI,GAAGH,SAAS,CAACI,KAAK,CAAC,CAAC,CAAC;IAE/B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAAC;IAE7BK,KAAK,CAAC,8BAA8B,EAAE;MACpCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEL;IACR,CAAC,CAAC,CACDM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBG,KAAK,CAACH,IAAI,CAAC;IACb,CAAC,CAAC,CACDI,KAAK,CAACC,KAAK,IAAI;MACdJ,OAAO,CAACI,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BF,KAAK,CAAC,uBAAuB,CAAC;IAChC,CAAC,CAAC;EACJ;EACF,oBACIG,OAAA,CAAAC,SAAA;IAAAC,QAAA,gBACAF,OAAA;MAAAE,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BN,OAAA;MAAOO,IAAI,EAAC,MAAM;MAACC,EAAE,EAAC;IAAW;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACnCN,OAAA;MAAQS,OAAO,EAAE9B,UAAU,CAAC,CAAE;MAAAuB,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAC5C,CAAC;AAGL,CAAC;AAAAI,EAAA,GA9BKhC,UAAU;AAgChB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}