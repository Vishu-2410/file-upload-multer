{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\backend\\\\file_upload_multer\\\\file_upload\\\\src\\\\file.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  const form = document.getElementById(\"form\");\n  function submitForm(e) {\n    // e.preventDefault();\n    const name = document.getElementById(\"name\");\n    const files = document.getElementById(\"files\");\n    const formData = new FormData();\n    formData.append(\"name\", name.value);\n    for (let i = 0; i < files.files.length; i++) {\n      formData.append(\"files\", files.files[i]);\n    }\n    fetch(\"http://localhost:5000/upload_files\", {\n      method: 'POST',\n      body: formData,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(res => console.log(res)).catch(err => (\"Error occured\", err));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"File Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"form\",\n        onSubmit: submitForm(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"name\",\n            children: \"Your name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"name\",\n            id: \"name\",\n            placeholder: \"Enter your name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"files\",\n            children: \"Select files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"files\",\n            type: \"file\",\n            multiple: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"submit-btn\",\n          type: \"submit\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["FileUpload","form","document","getElementById","submitForm","e","name","files","formData","FormData","append","value","i","length","fetch","method","body","headers","then","res","console","log","catch","err","_jsxDEV","_Fragment","children","class","fileName","_jsxFileName","lineNumber","columnNumber","id","onSubmit","for","placeholder","type","multiple","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/backend/file_upload_multer/file_upload/src/file.js"],"sourcesContent":["const  FileUpload= () => {\r\n    const form = document.getElementById(\"form\");\r\nfunction submitForm(e) {\r\n    // e.preventDefault();\r\n    const name = document.getElementById(\"name\");\r\n    const files = document.getElementById(\"files\");\r\n    const formData = new FormData();\r\n    formData.append(\"name\", name.value);\r\n    for(let i =0; i < files.files.length; i++) {\r\n            formData.append(\"files\", files.files[i]);\r\n    }\r\n    fetch(\"http://localhost:5000/upload_files\", {\r\n        method: 'POST',\r\n        body: formData,\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n    })\r\n        .then((res) => console.log(res))\r\n        .catch((err) => (\"Error occured\", err));\r\n}\r\n    return (  \r\n        <>\r\n        <div class=\"container\">\r\n            <h1>File Upload</h1>\r\n            <form id='form' onSubmit={submitForm()}>\r\n                <div class=\"input-group\">\r\n                    <label for='name'>Your name</label>\r\n                    <input name='name' id='name' placeholder=\"Enter your name\" />\r\n                </div>\r\n                <div class=\"input-group\">\r\n                    <label for='files'>Select files</label>\r\n                    <input id='files' type=\"file\" multiple/>\r\n                </div>\r\n                <button class=\"submit-btn\" type='submit' >Upload</button>\r\n            </form>\r\n        </div>\r\n\r\n    </>\r\n    );\r\n\r\n}\r\n \r\nexport default  FileUpload ;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}